{
	"comment": "Heavily referenced https://github.com/zaach/jison/blob/master/examples/json_ast.js",
	"lex": {
		"macros": {
			"esc": "\\\\",

			"lowercase": "[a-z]",
			"uppercase": "[A-Z]",
			"letter": "{lowercase} | {uppercase}",
			"digit": "[0-9]",

			"nonzerodigit": "[1-9]",
			"octdigit": "[0-7]",
			"bindigit": "0 | 1",
			"hexdigit": "{digit} | [a-f] | [A-F]"

		},
		"rules": [
			["and",			"return 'AND';"],
			["as",			"return 'AS';"],
			["assert",		"return 'ASSERT';"],
			["break",		"return 'BREAK';"],
			["class",		"return 'CLASS';"],
			["continue",		"return 'CONTINUE';"],
			["def",			"return 'DEF';"],
			["del",			"return 'DEL';"],
			["elif",		"return 'ELIF';"],
			["else",		"return 'ELSE';"],
			["except",		"return 'EXCEPT';"],
			["exec",		"return 'EXEC';"],
			["finally",		"return 'FINALLY';"],
			["for",			"return 'FOR';"],
			["from",		"return 'FROM';"],
			["global",		"return 'GLOBAL';"],
			["if",			"return 'IF';"],
			["import",		"return 'IMPORT';"],
			["in",			"return 'IN';"],
			["is",			"return 'IS';"],
			["lambda",		"return 'LAMBDA';"],
			["not",			"return 'NOT';"],
			["or",			"return 'OR';"],
			["pass",		"return 'PASS';"],
			["print",		"return 'PRINT';"],
			["raise",		"return 'RAISE';"],
			["return",		"return 'RETURN';"],
			["try",			"return 'TRY';"],
			["while",		"return 'WHILE';"],
			["with",		"return 'WITH';"],
			["yield",		"return 'YIELD';"],
			["^\\s*",		"return 'INDENT';"],
			["^\\s*",		"return 'DEDENT';"],
			
			["+",			"return '+';"],
			["-",			"return '-';"],
			["*",			"return '*';"],
			["**",			"return '**';"],
			["/",			"return '/';"],
			["//",			"return '//';"],
			["%",			"return '%';"],
			["<<",			"return '<<';"],
			[">>",			"return '>>';"],
			["&",			"return '&';"],
			["|",			"return '|';"],
			["^",			"return '^';"],
			["~",			"return '~';"],
			["<",			"return '<';"],
			[">",			"return '>';"],
			["<=",			"return '<=';"],
			[">=",			"return '>=';"],
			["==",			"return '==';"],
			["!=",			"return '!=';"],
			["<>",			"return '<>';"],

			["[0-9]+(?:\\.[0-9]+)?\\b",			"return 'NUMBER';"],
			["\"(?:{esc}[\"bfnrt/{esc}]|{esc}u[a-fA-F0-9]{4}|[^\"{esc}])*\"", "yytext = yytext.substr(1,yyleng-2); return 'STRING';"],

			["({letter} | {esc}_) (letter | digit | {esc}_)*",		"return 'IDENTIFIER';"],


			[",",							"return ',';"],
			["\\[",						"return '[';"],
			["\\]",						"return ']';"],
			["$",							"return 'EOF';"]
		]
	},

	"bnf": {
		"file": [
			["tokens EOF",					"return $1;"]
		],
		"tokens": [
			["array",					"$$ = $1;"]
		],
		"array": [
			["[ elementlist ]",				"$$ = $2;"]
		],
		"elementlist": [
			["elementlist , element",			"$$ = $1; $1.push($3);"],
			["element",					"$$ = [$1];"]
		],
		"element": [
			["number",					"$$ = $1;"],
			["string",					"$$ = $1;"]
		],
		"number": [
			["NUMBER", 					"$$ = Number(yytext);"]
		],
		"string": [
			["STRING",					"$$ = yytext;"]
		]
	}
}

{
	"comment": "Heavily referenced https://github.com/zaach/jison/blob/master/examples/json_ast.js",
	"lex": {
		"macros": {
			"esc": "\\",
			"backslash": "\\\\",
			"singlequote": "'",
			"doublequote": "\"",

			"lowercase": "[a-z]",
			"uppercase": "[A-Z]",
			"letter": "{lowercase}|{uppercase}",
			"digit": "[0-9]",

			"nonzerodigit": "[1-9]",
			"octdigit": "[0-7]",
			"bindigit": "0|1",
			"hexdigit": "{digit}|[a-f]|[A-F]",
			
			"octinteger": "0(o|0){octdigit}+|0{octdigit}+",
			"hexinteger": "0(x|X){hexdigit}+",
			"bininteger": "0(b|B){bindigit}+",
			"decimalinteger": "{nonzerodigit}{digit}*|0",
			
			"integer": "{decimalinteger}|{octinteger}|{hexinteger}|{bininteger}",

			"longinteger": "{integer}(l|L)",

			"intpart": "{digit}+",
			"fraction": "{esc}.{digit}+",
			"exponent": "(e|E)({esc}+|{esc}-){digit}+",

			"pointfloat": "({intpart}{fraction})|({intpart}{esc}.)",
			"exponentfloat": "({intpart}|{pointfloat}){exponent}",
			
			"floatnumber": "{pointfloat}|{exponentfloat}",

			"imagnumber": "({floatnumber}|{intpart})(j|J)",

			"escasciichar": "{backslash}x[0-7][0-F]",
			"escoctalchar": "{backslash}[0-7][0-7][0-7]",
			"escverticaltab": "{backslash}v",
			"escunicode32": "{backslash}U[0-9]{8}",
			"escunicode16": "{backslash}u[0-9]{4}",
			"escasciitab": "{backslash}t",
			"escasciireturn": "{backslash}r",
			
			"escasciilinefeed": "{backslash}n",
			"escasciiformfeed": "{backslash}f",
			"escasciibackspace": "{backslash}b",
			"escasciibell": "{backslash}a",
			"escdoublequote": "{backslash}{doublequote}",
			"escsinglequote": "{backslash}{singlequote}",
			"escbackslash": "{backslash}{backslash}",
			"escnewline": "{backslash}newline",

			"escapeseq": "{escasciichar}|{escoctalchar}|{escverticaltabe}|{escunicode16}|{escunicode32}|{escasciitab}|{escasciireturn}|{escasciilinefeed}|{escasciiformfeed}|{escasciibackspace}|{escasciibell}|{escdoublequote}|{escsinglequote}|{escbackslash}|{escnewline}",

			"shortstringchar": "[^{backslash}{singlequote}{doublequote}]",
			"longstringchar": "[^{backslash}]",

			"shortstringitem": "{shortstringchar}|{escapeseq}",
			"longstringitem": "{longstringchar}|{escapeseq}",

			"shortstring": "{singlequote}({shortstringitem})*{singlequote}|{doublequote}({shortstringitem})*{doublequote}",
			"longstring": "{singlequote}{singlequote}{singlequote}({longstringitem})*{singlequote}{singlequote}{singlequote}|{doublequote}{doublequote}{doublequote}({longstringitem})*{doublequote}{doublequote}{doublequote}",
			
			"stringprefix": "r|u|ur|R|U|UR|Ur|uR|b|B|br|Br|bR|BR"

		},
		"rules": [
			["\\n",			"return 'NEWLINE';"],
			["\\s+",		"return 'WHITESPACE';"],
			["and",			"return 'AND';"],
			["assert",		"return 'ASSERT';"],
			["as",			"return 'AS';"],
			["break",		"return 'BREAK';"],
			["class",		"return 'CLASS';"],
			["continue",		"return 'CONTINUE';"],
			["def",			"return 'DEF';"],
			["del",			"return 'DEL';"],
			["elif",		"return 'ELIF';"],
			["else",		"return 'ELSE';"],
			["except",		"return 'EXCEPT';"],
			["exec",		"return 'EXEC';"],
			["finally",		"return 'FINALLY';"],
			["for",			"return 'FOR';"],
			["from",		"return 'FROM';"],
			["global",		"return 'GLOBAL';"],
			["if",			"return 'IF';"],
			["import",		"return 'IMPORT';"],
			["in",			"return 'IN';"],
			["is",			"return 'IS';"],
			["lambda",		"return 'LAMBDA';"],
			["not",			"return 'NOT';"],
			["or",			"return 'OR';"],
			["pass",		"return 'PASS';"],
			["print",		"return 'PRINT';"],
			["raise",		"return 'RAISE';"],
			["return",		"return 'RETURN';"],
			["try",			"return 'TRY';"],
			["while",		"return 'WHILE';"],
			["with",		"return 'WITH';"],
			["yield",		"return 'YIELD';"],
			
			["{esc}+",		"return '+';"],
			["{esc}-",		"return '-';"],
			["{esc}*{esc}*",	"return '**';"],
			["{esc}*",		"return '*';"],
			["{esc}/{esc}/",	"return '//';"],
			["{esc}/",		"return '/';"],
			["%",			"return '%';"],
			["<<",			"return '<<';"],
			[">>",			"return '>>';"],
			["&",			"return '&';"],
			["{esc}|",		"return '|';"],
			["{esc}^",		"return '^';"],
			["~",			"return '~';"],
			["<",			"return '<';"],
			[">",			"return '>';"],
			["<=",			"return '<=';"],
			[">=",			"return '>=';"],
			["==",			"return '==';"],
			["!=",			"return '!=';"],
			["<>",			"return '<>';"],

			["{esc}(",		"return '(';"],
			["{esc})",		"return ')';"],
			["{esc}[",		"return '[';"],
			["{esc}]",		"return ']';"],
			["{esc}{",		"return '{';"],
			["{esc}}",		"return '}';"],
			["@",			"return '@';"],
			[",",			"return ',';"],
			[":",			"return ':';"],
			["{esc}.",		"return '.';"],
			["`",			"return '`';"],
			["=",			"return '=';"],
			[";",			"return ';';"],
			["{esc}+=",		"return '+=';"],
			["-=",			"return '-=';"],
			["{esc}*=",		"return '*=';"],
			["{esc}/=",		"return '/=';"],
			["{esc}/{esc}/=",	"return '//=';"],
			["%=",			"return '%=';"],
			["&=",			"return '&=';"],
			["{esc}|=",		"return '|=';"],
			["{esc}^=",		"return '^=';"],
			[">>=",			"return '>>=';"],
			["<<=",			"return '<<=';"],
			["{esc}*{esc}*=",	"return '**=';"],

			["#",			"return '#';"],
			["\\\\",		"return '\\\\';"],

			["{imagnumber}|{floatnumber}|{longinteger}|{integer}}",				"return 'NUMBER';"],
			["({stringprefix})?({shortstring}|{longstring})",				"yytext = yytext.substr(1,yyleng-2); return 'STRING';"],

			["({letter}|_)({letter}|{digit}|_)*",						"return 'NAME';"],

			["\\[",			"return '[';"],
			["\\]",			"return ']';"],
			["$",			"return 'EOF';"]
		]
	},

	"bnf": {
		"file": [
			["tokens EOF",				"return $1;"]
		],
		"tokens": [
			["tokens token",			"$$ = $1; $1.push($2);"],
			["",					"$$ = [];"]
		],
		"token": [
			["newline",				"$$ = $1;"],
			["whitespace",				"$$ = $1;"],
			["array",				"$$ = $1;"],
			["keyword",				"$$ = $1;"],
			["operator",			"$$ = $1;"],
			["number",				"$$ = $1;"],
			["string",				"$$ = $1;"]
		],
		"newline": [
			["NEWLINE",				"$$ = yytext;"]
		],
		"whitespace": [
			["INDENT",				"console.log('HIT INDENT');$$ = yytext;"],
			["DEDENT",				"console.log('HIT DEDENT');$$ = yytext;"],
			["WHITESPACE",				"$$ = yytext;"]
		],
		"keyword": [
			["AND",				"$$ = 'AND';"],
			["ASSERT",			"$$ = 'ASSERT';"],
			["AS",				"$$ = 'AS';"],
			["BREAK",			"$$ = 'BREAK';"],
			["CLASS",			"$$ = 'CLASS';"],
			["CONTINUE",			"$$ = 'CONTINUE';"],
			["DEF",				"$$ = 'DEF';"],
			["DEL",				"$$ = 'DEL';"],
			["ELIF",			"$$ = 'ELIF';"],
			["ELSE",			"$$ = 'ELSE';"],
			["EXCEPT",			"$$ = 'EXCEPT';"],
			["EXEC",			"$$ = 'EXEC';"],
			["FINALLY",			"$$ = 'FINALLY';"],
			["FOR",				"$$ = 'FOR';"],
			["FROM",			"$$ = 'FROM';"],
			["GLOBAL",			"$$ = 'GLOBAL';"],
			["IF",				"$$ = 'IF';"],
			["IMPORT",			"$$ = 'IMPORT';"],
			["IN",				"$$ = 'IN';"],
			["IS",				"$$ = 'IS';"],
			["LAMBDA",			"$$ = 'LAMBDA';"],
			["NOT",				"$$ = 'NOT';"],
			["OR",				"$$ = 'OR';"],
			["PASS",			"$$ = 'PASS';"],
			["PRINT",			"$$ = 'PRINT';"],
			["RAISE",			"$$ = 'RAISE';"],
			["RETURN",			"$$ = 'RETURN';"],
			["TRY",				"$$ = 'TRY';"],
			["WHILE",			"$$ = 'WHILE';"],
			["WITH",			"$$ = 'WITH';"],
			["YIELD",			"$$ = 'YIELD';"]
		],
		"operator": [
			["+",			"$$ = '+';"],
			["-",			"$$ = '-';"],
			["*",			"$$ = '*';"],
			["**",			"$$ = '**';"],
			["/",			"$$ = '/';"],
			["//",			"$$ = '//';"],
			["%",			"$$ = '%';"],
			["<<",			"$$ = '<<';"],
			[">>",			"$$ = '>>';"],
			["&",			"$$ = '&';"],
			["|",			"$$ = '|';"],
			["^",			"$$ = '^';"],
			["~",			"$$ = '~';"],
			["<",			"$$ = '<';"],
			[">",			"$$ = '>';"],
			["<=",			"$$ = '<=';"],
			[">=",			"$$ = '>=';"],
			["==",			"$$ = '==';"],
			["!=",			"$$ = '!=';"],
			["<>",			"$$ = '<>';"]
		],
		"array": [
			["[ elementlist ]",			"$$ = $2;"]
		],
		"elementlist": [
			["elementlist , element",		"$$ = $1; $1.push($3);"],
			["element",				"$$ = [$1];"],
			["",					"$$ = [];"]
		],
		"element": [
			["number",				"$$ = $1;"],
			["string",				"$$ = $1;"]
		],
		"number": [
			["NUMBER", 				"$$ = Number(yytext);"]
		],
		"string": [
			["STRING",				"$$ = yytext;"]
		]
	}
}
